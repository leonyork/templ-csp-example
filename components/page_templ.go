// Code generated by templ@v0.2.364 DO NOT EDIT.

package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

const HTMX_SCRIPT_SHA = "sha384-FhXw7b6AlE/jyjlZH5iHa/tTe9EpJ1Y55RjcgPbjeWMskSxZt1v9qkxLJWNJaGni"
const HTMX_STYLE_SHA = "sha256-d7rFBVhb3n/Drrf+EpNWYdITkos3kQRFpB0oSOycXg4="

func Page() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_1 := templ.GetChildren(ctx)
		if var_1 == nil {
			var_1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, err = templBuffer.WriteString("<!doctype html><html lang=\"en\"><head><script src=\"https://unpkg.com/htmx.org@1.9.6\" integrity=\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(templ.EscapeString(HTMX_SCRIPT_SHA))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\" crossorigin=\"anonymous\">")
		if err != nil {
			return err
		}
		var_2 := ``
		_, err = templBuffer.WriteString(var_2)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</script></head><body><h1>")
		if err != nil {
			return err
		}
		var_3 := `Check the console for a log!`
		_, err = templBuffer.WriteString(var_3)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</h1><div id=\"htmx\" hx-get hx-trigger=\"load\">")
		if err != nil {
			return err
		}
		var_4 := `Loading htmx...`
		_, err = templBuffer.WriteString(var_4)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</div></body>")
		if err != nil {
			return err
		}
		err = inline(App()).Render(ctx, templBuffer)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</html>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}

func App() templ.ComponentScript {
	return templ.ComponentScript{
		Name: `__templ_App_c1e2`,
		Function: `function __templ_App_c1e2(){window.addEventListener("load", (event) => {
	  console.log("Loaded javascript!")
  });}`,
		Call: templ.SafeScript(`__templ_App_c1e2`),
	}
}
